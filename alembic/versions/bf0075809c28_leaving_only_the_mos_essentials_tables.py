"""Leaving only the mos essentials tables

Revision ID: bf0075809c28
Revises: 2b22c8a15588
Create Date: 2024-02-28 15:54:01.199856

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bf0075809c28'
down_revision: Union[str, None] = '2b22c8a15588'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('api_power_usage')
    op.drop_table('power_consumption')
    op.drop_table('api_power_usage_analytics')
    op.drop_table('timeseries_aggregated')
    op.drop_column('api_logs', 'request')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('api_logs', sa.Column('request', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('timeseries_aggregated',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('metric', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('n_ahead', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='timeseries_aggregated_pkey')
    )
    op.create_table('api_power_usage_analytics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('endpoint', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('power_usage_5_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_15_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_60_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_5_minutes_ahead_forecast', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_15_minutes_ahead_forecast', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_60_minutes_ahead_forecast', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='api_power_usage_analytics_pkey')
    )
    op.create_table('power_consumption',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('power_usage_5_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_15_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_60_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='power_consumption_pkey')
    )
    op.create_table('api_power_usage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('endpoint', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('request', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('power_usage_5_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_15_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('power_usage_60_minutes_ahead', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('response_status_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='api_power_usage_pkey')
    )
    # ### end Alembic commands ###
